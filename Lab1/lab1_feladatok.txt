//1)
fun main() {
    val x1: Int = 3
    val x2: Int = 2
    val sum = x1 + x2
    println(sum)
    
}


//2)
fun main() {
    val daysOfWeek = listOf ("Mon", "Tue", "Wen", "Thu", "Fri", "Sat", "Sun")
    for (item in daysOfWeek){
        println(item)
    }
    
}

fun main() {
    val daysOfWeek = listOf ("Mon", "Tue", "Wen", "Thu", "Fri", "Sat", "Sun")
    val Tdays = daysOfWeek.filter{it.startsWith("T")}
    println(Tdays)
    
}


fun main() {
    val daysOfWeek = listOf ("Mon", "Tue", "Wen", "Thu", "Fri", "Sat", "Sun")
    val Edays = daysOfWeek.filter{it.contains("e")}
    println(Edays)
    
}

fun main() {
    val daysOfWeek = listOf ("Monday", "Tuesday", "Wensday", "Thursday", "Friday", "Sat", "Sun")
    val sixDays = daysOfWeek.filter{it.length==6}
    println(sixDays)
    
}

//3)
fun isPrime(number: Int): Boolean {

    for (i in 2..number / 2) {
        if (number % i == 0) {
            return false
        }
    }
    return true
}

fun main() {
   
    val range = 100
    for(i in 1..range){
        if( isPrime(i) == true){
            println(i)
        }
    }
}

//4)
fun encode(text: String):String{
    return Base64.getEncoder().encodeToString(text.toByteArray)
}

fun decode(text: String):String{
    return Base64.getDecoder().encodeToString(text.toByteArray)
}
fun main() {
   var text = "abdsmdsds"
    
    
}

//5)
fun filterEven(vararg myList: Int){
    println(myList.filter { x -> x % 2 == 0 })
   
} 

fun main() {
    var myList = listOf(1, 4, 8, 5, 6, 9, 12, 10, 33)
	filterEven(myList)

}


//6)
fun main() {
    val numbers = listOf(1, 2, 3)
    val daysOfWeek = listOf ("Monday", "Tuesday", "Friday")
	println(numbers.map { it * 3 })
    println(daysOfWeek.map { it.toUpperCase()})
    println(daysOfWeek.map { it.first()})
    println(daysOfWeek.map { it.length})
    var temp = daysOfWeek.map{ it.length}.sum() / daysOfWeek.size
    println(temp)
    
}

//7)
fun main() {
    
    val daysOfWeek = mutableListOf ("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
	daysOfWeek.removeAll{x -> x in daysOfWeek.filter{it.contains("n")}}
    println(daysOfWeek)
    
    for((index, value) in daysOfWeek.withIndex()){
        println("Item at $index is $value")
    }
    
    daysOfWeek.sort()
    println(daysOfWeek)
    
}


//8)
import kotlin.random.Random

fun main() {
    

  var randInts = (1..10).map { (0..10).random() }
  randInts.forEach{println(it)}
  //randInts.sort() ez valamiert nem mukodik
  println(randInts.any { it%2 == 0}) // tartalmaz-e paros szamot
  println(randInts.all { it%2 == 0}) // az osszes szam paros-e
  var total = 0
  
  randInts.forEach{total += it}
  println(total/randInts.count())
}